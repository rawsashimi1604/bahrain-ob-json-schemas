{
  "required": [
    "CreditorAccount",
    "CurrencyOfTransfer",
    "FirstPaymentDateTime",
    "Frequency",
    "InstructedAmount"
  ],
  "type": "object",
  "properties": {
    "Frequency": {
      "pattern": "^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH))$",
      "type": "string",
      "description": "Individual Definitions:\nNotKnown - Not known EvryDay - Every day EvryWorkgDay - Every working day IntrvlDay - An interval specified in number of calendar days (02 to 31) IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07) WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07) IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-05 to -01, 01 to 31) QtrDay - Quarterly (ENGLISH) ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.\nIndividual Patterns:\nNotKnown (ScheduleCode) EvryDay (ScheduleCode) EvryWorkgDay (ScheduleCode) IntrvlDay:NoOfDay (ScheduleCode + NoOfDay) IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek) WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek) IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nNotKnown EvryDay EvryWorkgDay IntrvlDay:((0[2-9])\\|([1-2][0-9])\\|3[0-1]) IntrvlWkDay:0[1-9]:0[1-7] WkInMnthDay:0[1-5]:0[1-7] IntrvlMnthDay:(0[1-6]\\|12\\|24):(-0[1-5]\\|0[1-9]\\|[12][0-9]\\|3[01]) QtrDay:(ENGLISH)\nFull Regular Expression:\n^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH))$"
    },
    "Reference": {
      "maxLength": 35,
      "minLength": 1,
      "type": "string",
      "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification."
    },
    "NumberOfPayments": {
      "maxLength": 35,
      "minLength": 1,
      "type": "string",
      "description": "Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date."
    },
    "FirstPaymentDateTime": {
      "type": "string",
      "description": "The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
      "format": "date-time"
    },
    "FinalPaymentDateTime": {
      "type": "string",
      "description": "The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
      "format": "date-time"
    },
    "Purpose": {
      "maxLength": 4,
      "minLength": 1,
      "type": "string",
      "description": "Specifies the external purpose code in the format of character string with a maximum length of 4 characters.\nThe list of valid codes is an external code list published separately.\nExternal code sets can be downloaded from www.iso20022.org."
    },
    "ExtendedPurpose": {
      "maxLength": 140,
      "minLength": 1,
      "type": "string",
      "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes."
    },
    "ChargeBearer": {
      "$ref": "OBChargeBearerTypeCode.json"
    },
    "CurrencyOfTransfer": {
      "pattern": "^[A-Z]{3,3}$",
      "type": "string",
      "description": "Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account."
    },
    "DestinationCountryCode": {
      "pattern": "[A-Z]{2,2}",
      "type": "string",
      "description": "Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code)."
    },
    "InstructedAmount": {
      "$ref": "OBInternationalFutureDatedInitiation_InstructedAmount.json"
    },
    "DebtorAccount": {
      "$ref": "OBDomesticStandingOrderInitiation_DebtorAccount.json"
    },
    "Creditor": {
      "$ref": "OBInternationalFutureDatedInitiation_Creditor.json"
    },
    "CreditorAgent": {
      "$ref": "OBInternationalStandingOrder_CreditorAgent.json"
    },
    "CreditorAccount": {
      "$ref": "OBInternationalStandingOrder_CreditorAccount.json"
    },
    "SupplementaryData": {
      "$ref": "OBSupplementaryData.json"
    }
  },
  "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.",
  "$schema": "http://json-schema.org/schema#"
}